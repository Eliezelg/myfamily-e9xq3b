# Helm values for Nginx Ingress Controller v4.7.1
# Provides load balancing, SSL termination, and routing for MyFamily platform

controller:
  name: controller
  
  # Container image configuration
  image:
    repository: registry.k8s.io/ingress-nginx/controller
    tag: v1.8.1
    pullPolicy: IfNotPresent

  # High availability configuration
  replicaCount: 3
  minAvailable: 2

  # Resource allocation
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

  # Horizontal pod autoscaling
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  # Load balancer configuration
  service:
    type: LoadBalancer
    externalTrafficPolicy: Local
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
      service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:region:account:certificate/certificate-id
      service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"

  # Nginx configuration
  config:
    # Security settings
    use-forwarded-headers: "true"
    use-proxy-protocol: "true"
    enable-modsecurity: "true"
    enable-owasp-modsecurity-crs: "true"
    
    # TLS configuration
    ssl-protocols: "TLSv1.3"
    ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
    
    # Request handling
    proxy-body-size: "10m"
    proxy-connect-timeout: "5"
    proxy-read-timeout: "60"
    proxy-send-timeout: "60"
    client-header-timeout: "60"
    client-body-timeout: "60"
    
    # Connection management
    keep-alive: "75"
    keep-alive-requests: "100"
    
    # Compression
    enable-brotli: "true"
    use-gzip: "true"
    gzip-min-length: "1000"
    
    # Rate limiting
    http-snippet: |
      limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

  # Prometheus metrics
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: monitoring
      interval: 30s

  # Pod anti-affinity for high availability
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - ingress-nginx
        topologyKey: kubernetes.io/hostname

# RBAC configuration
rbac:
  create: true
  scope: true

# Service account configuration
serviceAccount:
  create: true
  name: ingress-nginx-sa
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::account:role/ingress-nginx-role

# Default backend configuration
defaultBackend:
  enabled: true
  image:
    repository: registry.k8s.io/defaultbackend-amd64
    tag: "1.5"
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi