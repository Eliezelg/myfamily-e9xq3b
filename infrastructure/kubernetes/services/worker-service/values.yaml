# Worker Service Helm Values Configuration
# Redis dependency: bitnami/redis@17.x

# Number of worker service replicas for high availability
replicaCount: 3

# Docker image configuration
image:
  repository: myfamily/worker-service
  tag: latest
  pullPolicy: IfNotPresent

# Resource allocation for worker pods
resources:
  requests:
    cpu: 500m
    memory: 1Gi
  limits:
    cpu: 1000m
    memory: 2Gi

# Horizontal pod autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70

# Queue configurations for different job types
queues:
  content:
    name: content-processing
    concurrency: 3
    attempts: 3
  gazette:
    name: gazette-generation
    concurrency: 2
    attempts: 3
  notification:
    name: notification
    concurrency: 5
    attempts: 3

# Redis configuration for Bull queues
redis:
  host: redis-master
  port: 6379
  prefix: myfamily:queue:
  tls:
    enabled: true
    certificateSecret: redis-tls-cert

# Node selection configuration
nodeSelector:
  worker-pool: "true"

# Pod scheduling tolerations
tolerations:
  - key: worker-pool
    operator: Exists
    effect: NoSchedule

# Pod affinity rules for high availability
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - worker-service
          topologyKey: kubernetes.io/hostname

# Liveness probe configuration
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Readiness probe configuration
readinessProbe:
  httpGet:
    path: /ready
    port: http
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Service configuration
service:
  type: ClusterIP
  port: 80

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

# Environment variables
env:
  - name: NODE_ENV
    value: production
  - name: REDIS_PREFIX
    value: myfamily:queue:
  - name: QUEUE_CONCURRENCY
    value: "3"

# Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "metrics"
  prometheus.io/path: "/metrics"

# Update strategy
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2