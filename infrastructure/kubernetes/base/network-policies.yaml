apiVersion: v1
kind: List
items:
  # Default deny-all policy implementing zero-trust model
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: default-deny-all
      namespace: production
      labels:
        app.kubernetes.io/name: network-policy
        app.kubernetes.io/component: security
    spec:
      podSelector: {}  # Applies to all pods
      policyTypes:
      - Ingress
      - Egress
      ingress: []  # Empty array = deny all ingress
      egress:
      # Allow DNS resolution
      - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
        ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

  # Allow ingress from API Gateway
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-api-gateway
      namespace: production
      annotations:
        policy.istio.io/ratelimit: "true"
    spec:
      podSelector:
        matchLabels:
          app.kubernetes.io/component: backend-service
      policyTypes:
      - Ingress
      ingress:
      - from:
        - podSelector:
            matchLabels:
              app: api-gateway
        ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 443

  # Allow Prometheus monitoring
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-monitoring
      namespace: production
    spec:
      podSelector:
        matchLabels:
          monitoring: enabled
      policyTypes:
      - Ingress
      ingress:
      - from:
        - namespaceSelector:
            matchLabels:
              name: system
          podSelector:
            matchLabels:
              app: prometheus
        ports:
        - protocol: TCP
          port: 9090  # Prometheus metrics port

  # Control egress traffic
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: egress-control
      namespace: production
      annotations:
        policy.istio.io/ratelimit-external: "true"
    spec:
      podSelector: {}
      policyTypes:
      - Egress
      egress:
      # Allow service mesh communication
      - to:
        - namespaceSelector:
            matchLabels:
              istio-injection: enabled
        ports:
        - protocol: TCP
          port: 15443  # Istio ingress gateway
      # Allow external API calls
      - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
            - 169.254.0.0/16  # Link local
            - 10.0.0.0/8      # Private network
            - 172.16.0.0/12   # Private network
            - 192.168.0.0/16  # Private network
        ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80

  # Cross-namespace communication
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: cross-namespace
      namespace: production
    spec:
      podSelector:
        matchLabels:
          app.kubernetes.io/component: backend-service
      policyTypes:
      - Ingress
      - Egress
      ingress:
      - from:
        - namespaceSelector:
            matchLabels:
              environment: production
          podSelector:
            matchLabels:
              app.kubernetes.io/component: backend-service
        ports:
        - protocol: TCP
          port: 8080
      egress:
      - to:
        - namespaceSelector:
            matchLabels:
              environment: production
          podSelector:
            matchLabels:
              app.kubernetes.io/component: backend-service
        ports:
        - protocol: TCP
          port: 8080